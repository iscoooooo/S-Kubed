<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif,Symbol,ZapfDingbats" font-size="10pt" text-align="justify" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" writing-mode="lr-tb" language="en"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body display-align="center" margin-bottom="0.5in" margin-top="0.5in"/><fo:region-before region-name="xsl-region-before-blank" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="maximized-landscape" page-width="11in" page-height="8.5in" margin-top="0.02in" margin-bottom="0.02in" margin-left="0.02in" margin-right="0.02in"><fo:region-body margin-bottom="0.02in" margin-top="0.02in" margin-left="0.02in" margin-right="0.02in"/><fo:region-before region-name="xsl-region-before-maximized" extent="0.02in" display-align="before"/><fo:region-after region-name="xsl-region-after-maximized" extent="0.02in" display-align="after"/><fo:region-start region-name="xsl-region-start-maximized" extent="0.02in" display-align="before"/><fo:region-end region-name="xsl-region-end-maximized" extent="0.02in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="maximized-portrait" page-width="8.5in" page-height="11in" margin-top="0.02in" margin-bottom="0.02in" margin-left="0.02in" margin-right="0.02in"><fo:region-body margin-bottom="0.02in" margin-top="0.02in" margin-left="0.02in" margin-right="0.02in"/><fo:region-before region-name="xsl-region-before-maximized" extent="0.02in" display-align="before"/><fo:region-after region-name="xsl-region-after-maximized" extent="0.02in" display-align="after"/><fo:region-start region-name="xsl-region-start-maximized" extent="0.02in" display-align="before"/><fo:region-end region-name="xsl-region-end-maximized" extent="0.02in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:declarations xmlns:fox="http://xmlgraphics.apache.org/fop/extensions"><x:xmpmeta xmlns:x="adobe:ns:meta/"><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about=""><dc:title/></rdf:Description><rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about=""/><rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about=""><xmp:CreatorTool>DocBook MathWorks XSL Stylesheets V1.75.2-mathworks</xmp:CreatorTool></rdf:Description></rdf:RDF></x:xmpmeta></fo:declarations><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0" end-indent="0pt"><fo:block id="idp1094978272"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"/></fo:block><fo:block id="idp1094977248"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker"/><fo:block font-size="20.736pt"/></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block text-align="start" wrap-option="wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="monospace" id="idp1094981984"><fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% Copyright © 2019 Naturalpoint</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	Not for Redistribution</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	NatNet Matlab Class</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	Requires Matlab 2019a or later</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	This class is a wrapper for the NatNetML assembly and controls the</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	connection and communication between the OptiTrack NatNet Server and</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	Matlab clients.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	Public Properties:</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		ClientIP - The IP address of the client network.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		ConnectionType - Multicast of Unicast</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		HostIP - The IP address of the host/server network.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		IsReporting - state of commandline reporting</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		IsConnected - state of connection to server, updated only when</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%					establishing a connection. (Read-only)</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		Mode - state of the Motive server, Live or Edit. (Read-Only)</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		Version - version number of the natnet libraries. (Read-Only)</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		FrameRate - sampling rate of the Motive hardware. (Read-Only)</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%	Public Methods:</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		natnet - Object Constructor</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		connect - Establish a connection to an OptiTrack NatNet Server</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		disconnect - Close a connection to an OptiTrack NatNet Server</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		addlistener - Links a callback function to the server stream.</fo:inline>

<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getFrameRate - Returns the server Frame Rate.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getModelDescription - Returns a structure of the asset list.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getFrame - Returns the latest frame of mocap data.</fo:inline>

<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getFrameMetaData - Returns last frame of meta data within mocap</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%			frame. Return value is a Matlab struct</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getFrameMarkerSet - Returns the last frame of MarkerSet data</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%			within mocap frame. Return value is a Matlab struct</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getFrameLabeledMarker - Returns the last frame of LabeledMarker</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%			data within the mocap frame. Return value is a Matlab</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%			struct.</fo:inline>

<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		getMode - Returns the state of the server: Live or Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		enable - Enables execution of a linked callback function.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		disable - Disabled execution of a linked callback function.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		Server Commands</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		startRecord - Starts a recording on the server.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		stopRecord - Stops a recording on the server.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		cycleRecord - Loops recording.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		liveMode - Changes the server to Live mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		editMode - Changes the server to Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		startPlayback - Starts playback of the server in Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		stopPlayback - Stops playback of the server in Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setPlaybackStartFrame - Sets the playback loop start frame.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setPlaybackEndFrame - Sets the playback loop end frame.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setPlaybackLooping - Sets playback to loop.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setPlaybackCurrentFrame - Sets the current frame in Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setTakeName - Sets the pending (to be recorded) take name.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setPlaybackTakeName - Opens a recorded take in Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		setCurrentSession - Changes the current folder in Edit mode.</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%		delete - Destructor for the natnet class</fo:inline>

<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">classdef</fo:inline> natnet &lt; handle
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">properties</fo:inline> ( Access = public )
		ClientIP
		ConnectionType
		HostIP
		IsReporting
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% properties ( Access = public )</fo:inline>


	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">properties</fo:inline> ( SetAccess = private )
		IsConnected
		Mode
		Version
		FrameRate
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% properties ( SetAccess = private )</fo:inline>


	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">properties</fo:inline> ( Access = private )
		Assembly
		AssemblyPath
		AssemblyVersion
		Client
		IsAssemblyLoaded
		LastAssemblyPathFile
		MaxListeners
		Listener
		CReattempt
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% properties ( Access = private )</fo:inline>


	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">properties</fo:inline> ( Access = private , Dependent = true )
		iConnectionType
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% properties ( Access = private , Dependant = true )</fo:inline>


	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">methods</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> set.HostIP( obj , val )
			validIP = obj.checkip( val);
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( ~isempty( validIP ) )
				obj.disconnect
				obj.HostIP = validIP;
				obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'set host ip address: '</fo:inline> , validIP ] )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% set.HostIP</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> set.ClientIP( obj , val )
			validIP = obj.checkip( val );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( ~isempty( validIP ) )
				obj.disconnect
				obj.ClientIP = validIP;
				obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'set client ip address: '</fo:inline> , validIP ] )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% set.ClientIP</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> set.ConnectionType( obj , val )
			obj.disconnect
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( strcmpi( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Multicast'</fo:inline> , val ) == 1 )
				obj.ConnectionType = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Multicast'</fo:inline>;
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'set multicast'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( strcmpi( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Unicast'</fo:inline> , val ) == 1 )
				obj.ConnectionType = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Unicast'</fo:inline>;
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'set unicast'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid connection type'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% set.ConnectionType</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> set.IsReporting( obj , val )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( val == 1 )
				obj.IsReporting = 1;
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'reporting enabled'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( val == 0 )
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'reporting disabled'</fo:inline> )
				obj.IsReporting = 0;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% set.IsReporting</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> iconnectiontype = get.iConnectionType( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( strcmpi( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Multicast'</fo:inline> , obj.ConnectionType ) == 1 )
				iconnectiontype = 0;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( strcmpi( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Unicast'</fo:inline> , obj.ConnectionType ) == 1 )
				iconnectiontype = 1;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% iconnectiontype</fo:inline>
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% methods ( property set and get methods)</fo:inline>


	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">methods</fo:inline> ( Access = public  )
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> obj = natnet(  )
			obj.getLastAssemblyPath
			obj.MaxListeners = 255;
			obj.Listener{ obj.MaxListeners , 1 } = [ ];
			obj.FrameRate = 0;
			obj.IsAssemblyLoaded = 0;
			obj.IsConnected = 0;
			obj.IsReporting = 0;
			obj.CReattempt = 1;
			obj.HostIP = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'127.0.0.1'</fo:inline>;
			obj.ClientIP = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'127.0.0.1'</fo:inline>;
			obj.ConnectionType = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Multicast'</fo:inline>;
			obj.Version = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">' '</fo:inline>;
			obj.Mode = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">' '</fo:inline>;
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% natnet - constructor</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> connect( obj )
			obj.disconnect
			obj.getAssemblies
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsAssemblyLoaded == 0 )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( isempty( obj.AssemblyPath ) )
					obj.setAssemblyPath
					obj.addAssembly
					obj.getAssemblies
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					obj.addAssembly
					obj.getAssemblies
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsAssemblyLoaded == 0 )
				report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'natnetml assembly is missing or undefined'</fo:inline> )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">try</fo:inline>
				obj.Client = NatNetML.NatNetClientML( obj.iConnectionType );
				v = obj.Client.NatNetVersion(  );
				obj.Version = sprintf( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'%d.%d.%d.%d'</fo:inline>, v( 1 ) , v( 2 ) , v( 3 ) , v( 4 ) );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline>  ( isempty( obj.Client ) == 1 || obj.IsAssemblyLoaded == 0 )
					obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'client object invalid'</fo:inline> )
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'natnet version: '</fo:inline> , obj.Version ] )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				flg = obj.Client.Initialize( obj.ClientIP , obj.HostIP );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> flg == 0
					obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'client initialized'</fo:inline> )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'initialization failed'</fo:inline> )
					obj.IsConnected = 0;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">catch</fo:inline> exception
				rethrow(exception)
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>

			[ ~ , rc] = obj.Client.SendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'FrameRate'</fo:inline> );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> rc == 0
				obj.IsConnected = 1;
				obj.getFrameRate
				obj.getMode
				obj.getModelDescription;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline>( rc == 1 )
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection failed due to an internal error'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( rc == 2 )
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection failed due to an external error'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( rc == 3 )
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection failed due to a network error'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection failed due to an unknown error'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			obj.IsConnected = 0;
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% connect</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> addlistener( obj , aListenerIndex , functionhandlestring )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ~isnumeric( aListenerIndex ) || aListenerIndex &lt; 1 || aListenerIndex &gt; obj.MaxListeners
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid index'</fo:inline> );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>

			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> isa( functionhandlestring , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'char'</fo:inline> ) &amp;&amp; ~isempty( which( functionhandlestring ) )
				functionhandle = str2func ( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'@( src , evnt)'</fo:inline> , functionhandlestring , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'( src , evnt)'</fo:inline> ] );

				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ~isa( obj.Listener{ aListenerIndex , 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline> )
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'adding listener in slot:'</fo:inline> , num2str(aListenerIndex ) ] );
					obj.Listener{ aListenerIndex , 1 } = addlistener( obj.Client , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'OnFrameReady2'</fo:inline> , functionhandle );
					obj.disable( aListenerIndex );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> isa( obj.Listener{ aListenerIndex , 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline> )
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'replacing listener in slot: '</fo:inline> , num2str(aListenerIndex ) ] )
					obj.disable( aListenerIndex )
					delete( obj.Listener{ aListenerIndex , 1 } )
					obj.Listener{ aListenerIndex , 1 } = addlistener( obj.Client, <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'OnFrameReady2'</fo:inline> , functionhandle );
					obj.disable ( aListenerIndex )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid function set for slot: '</fo:inline> , num2str( aListenerIndex ) ] )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% addlistener</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> getFrameRate( obj )
			[ bytearray , rc ] = obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'FrameRate'</fo:inline> );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> rc == 0
				bytearray = uint8( bytearray );
				obj.FrameRate =  typecast( bytearray , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'single'</fo:inline> );
				obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'frame rate: '</fo:inline> , num2str( obj.FrameRate ) , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">' fps'</fo:inline> ] )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.FrameRate = 0;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getFrameRate</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> modelDescription = getModelDescription( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 )
				dataDescriptions = obj.Client.GetDataDescriptions(  );
				modelDescription.TrackingModelCount = dataDescriptions.Count;
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of trackables: '</fo:inline> , num2str( dataDescriptions.Count ) ] )
				modelDescription.MarkerSetCount = 0;
				modelDescription.RigidBodyCount = 0;
				modelDescription.SkeletonCount = 0;
				modelDescription.ForcePlateCount = 0;
				modelDescription.DeviceCount = 0;
				modelDescription.CameraCount = 0;

				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = 1 : modelDescription.TrackingModelCount
					descriptor = dataDescriptions.Item( i - 1 );
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% marker sets</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( descriptor.type == 0)
						modelDescription.MarkerSetCount = modelDescription.MarkerSetCount + 1;
						modelDescription.MarkerSet( modelDescription.MarkerSetCount ).Name = char( descriptor.Name );
						modelDescription.MarkerSet( modelDescription.MarkerSetCount ).MarkerCount = descriptor.nMarkers;
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> k = 1 : descriptor.nMarkers
							modelDescription.MarkerSet( modelDescription.MarkerSetCount ).Markers( k ).Label = char( descriptor.MarkerNames( k ) );
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% rigid bodies</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( descriptor.type == 1 )
						modelDescription.RigidBodyCount = modelDescription.RigidBodyCount + 1;
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).Name = char( descriptor.Name );
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).ID = descriptor.ID ;
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).ParentID = descriptor.parentID;
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).OffsetX = descriptor.offsetx;
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).OffsetX = descriptor.offsetx;
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).OffsetX = descriptor.offsetx;
						modelDescription.RigidBody( modelDescription.RigidBodyCount ).Type = descriptor.type;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% skeletons</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( descriptor.type == 2 )
						modelDescription.SkeletonCount = modelDescription.SkeletonCount + 1;
						modelDescription.Skeleton( modelDescription.SkeletonCount ).Name = char( descriptor.Name );
						modelDescription.Skeleton( modelDescription.SkeletonCount ).ID = descriptor.ID;
						modelDescription.Skeleton( modelDescription.SkeletonCount ).SegmentCount = descriptor.nRigidBodies;
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> k = 1 : modelDescription.Skeleton( modelDescription.SkeletonCount ).SegmentCount
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).Name = char( descriptor.RigidBodies( k ).Name );
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).ID = descriptor.RigidBodies( k ).ID;
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).ParentID = descriptor.RigidBodies( k ).parentID;
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).OffsetX = descriptor.RigidBodies( k ).offsetx;
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).OffsetY = descriptor.RigidBodies( k ).offsety;
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).OffsetZ = descriptor.RigidBodies( k ).offsetz;
							modelDescription.Skeleton( modelDescription.SkeletonCount ).Segment( k ).Type = descriptor.RigidBodies( k ).type;
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( descriptor.type == 3 )
						modelDescription.ForcePlateCount = modelDescription.ForcePlateCount + 1;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Serial = char( descriptor.Serial );
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).ID = descriptor.ID;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Width = descriptor.Width;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Length = descriptor.Length;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Origin.X = descriptor.OriginX;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Origin.Y = descriptor.OriginY;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Origin.Z = descriptor.OriginZ;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).CalibrationMatrix = descriptor.CalMatrix;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).CornerCount = descriptor.Corners.Length;
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = 1 : modelDescription.ForcePlate( modelDescription.ForcePlateCount ).CornerCount/3
							modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Corner( i ).X = descriptor.Corners( i*3-2 );
							modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Corner( i ).Y = descriptor.Corners( i*3-1 );
							modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Corner( i ).Z = descriptor.Corners( i*3 );
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).PlateType = descriptor.PlateType;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).ChannelDataType = descriptor.ChannelDataType;
						modelDescription.ForcePlate( modelDescription.ForcePlateCount ).ChannelCount = descriptor.ChannelCount;
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = 1 : modelDescription.ForcePlate( modelDescription.ForcePlateCount ).ChannelCount
							modelDescription.ForcePlate( modelDescription.ForcePlateCount ).Channel( i ).Name = char( descriptor.ChannelNames( i ) );
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> (descriptor.type == 4)
						modelDescription.DeviceCount = modelDescription.DeviceCount + 1;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> (descriptor.type == -1 || descriptor.type == 5)
						modelDescription.CameraCount = modelDescription.CameraCount + 1;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
						report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid asset type'</fo:inline> )
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of markersets: '</fo:inline> , num2str( modelDescription.MarkerSetCount ) ] )
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of rigid bodies: '</fo:inline> , num2str( modelDescription.RigidBodyCount ) ] )
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of skeletons: '</fo:inline> , num2str( modelDescription.SkeletonCount ) ] )
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of force plates: '</fo:inline> , num2str( modelDescription.ForcePlateCount ) ] )
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of devices: '</fo:inline> , num2str( modelDescription.DeviceCount ) ] )
				report( obj , [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'number of cameras: '</fo:inline> , num2str( modelDescription.CameraCount ) ] )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection not established'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getModelDescription</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> frameOfMocapData = getFrame( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 )
				data = obj.Client.GetLastFrameOfData(  );
				frameOfMocapData = data;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection not established'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getFrame</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> frameOfMetaData = getFrameMetaData( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">persistent</fo:inline> data
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 )
				data = obj.Client.GetLastFrameOfData(  );
				t.Frame = data.iFrame;
				t.Timestamp = data.fTimestamp;
				t.CameraMidExposureTimestamp = data.CameraMidExposureTimestamp;
				t.CameraDataReceivedTimestamp = data.CameraDataReceivedTimestamp;
				t.TransmitTimestamp = data.TransmitTimestamp;
				t.Recording = data.bRecording;
				t.TrackingModelsChanged = data.bTrackingModelsChanged;
				t.Timecode = data.Timecode;
				t.TimecodeSubframe = data.TimecodeSubframe;
				t.MarkerCount = data.nMarkers;
				t.OtherMarkerCount = data.nOtherMarkers;
				t.MarkerSetCount = data.nMarkerSets;
				t.RigidBodyCount = data.nRigidBodies;
				t.SkeletonCount = data.nSkeletons;
				t.ForcePlateCount = data.nForcePlates;
				t.DeviceCount = data.nDevices;
				frameOfMetaData = t;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection not established'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getFrameOfMetaData</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> frameOfLabeledMarkerData = getFrameLabeledMarker( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 )
				data = obj.Client.GetLastFrameOfData(  );
				t.Frame = data.iFrame;
				t.Timestamp = data.fTimestamp;
				t.MarkerCount = data.nMarkers;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = t.MarkerCount : -1 : 1
					t.LabeledMarker( i ).AssetID = int16( bitshift( data.LabeledMarkers( i ).ID , -16 ) );
					t.LabeledMarker( i ).MemberID = int16( bitshift ( bitshift( data.LabeledMarkers( i ).ID , 16 ) , -16 ) );
					t.LabeledMarker( i ).X = data.LabeledMarkers( i ).x;
					t.LabeledMarker( i ).Y = data.LabeledMarkers( i ).y;
					t.LabeledMarker( i ).Z = data.LabeledMarkers( i ).z;
					t.LabeledMarker( i ).Size = data.LabeledMarkers( i ).size;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.LabeledMarker( i ).Occluded = logical( bitget( data.LabeledMarkers( i ).parameters , 1 ) );</fo:inline>
					t.LabeledMarker( i ).PointCloudSolved = logical( bitget( data.LabeledMarkers( i ).parameters , 2 ) );
					t.LabeledMarker( i ).AssetSolved = logical( bitget( data.LabeledMarkers( i ).parameters , 3 ) );
					t.LabeledMarker( i ).AssetMarker = logical( bitget( data.LabeledMarkers( i ).parameters , 4 ) );
					t.LabeledMarker( i ).UnlabeledMarker = logical( bitget( data.LabeledMarkers( i ).parameters , 5 ) );
					t.LabeledMarker( i ).ActiveMarker = logical( bitget( data.LabeledMarkers( i ).parameters , 6 ) );
					t.LabeledMarker( i ).Residual = data.LabeledMarkers( i ).residual;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				frameOfLabeledMarkerData = t;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection not established'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getFrameLabeledMarker</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> frameOfMarkerSetData = getFrameMarkerSet( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 )
				data = obj.Client.GetLastFrameOfData(  );
				t.Frame = data.iFrame;
				t.Timestamp = data.fTimestamp;
				t.MarkerSetCount = data.nMarkerSets;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = t.MarkerSetCount : -1 : 1
					t.MarkerSet( i ).MarkerSetName = string( data.MarkerSets( i ).MarkerSetName );
					t.MarkerSet( i ).MarkerCount = data.MarkerSets( i ).nMarkers;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> j = t.MarkerSet( i ).MarkerCount : -1 : 1
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).AssetID = int16( bitshift( data.MarkerSets( i ).Markers( j ).ID , -16 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).MemberID = int16( bitshift ( bitshift( data.MarkerSets( i ).Markers( j ).ID , 16 ) , -16 ) );</fo:inline>
						t.MarkerSet( i ).Marker( j ).X = data.MarkerSets( i ).Markers( j ).x;
						t.MarkerSet( i ).Marker( j ).Y = data.MarkerSets( i ).Markers( j ).y;
						t.MarkerSet( i ).Marker( j ).Z = data.MarkerSets( i ).Markers( j ).z;
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).Size = data.MarkerSets( i ).Markers( j ).size;</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).Occluded = logical( bitget( data.MarkerSets( i ).Markers( j ).parameters , 1 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).PointCloudSolved = logical( bitget( data.MarkerSets( i ).Markers( j ).parameters , 2 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).AssetSolved = logical( bitget( data.MarkerSets( i ).Markers( j ).parameters , 3 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).AssetMarker = logical( bitget( data.MarkerSets( i ).Markers( j ).parameters , 4 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).UnlabeledMarker = logical( bitget( data.MarkerSets( i ).Markers( j ).parameters , 5 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).ActiveMarker = logical( bitget( data.MarkerSets( i ).Markers( j ).parameters , 6 ) );</fo:inline>
						<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">%t.MarkerSet( i ).Marker( j ).Residual = data.MarkerSets( i ).Markers( j ).residual;</fo:inline>
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				frameOfMarkerSetData = t;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection not established'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getFrameMarkerSet</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> enable( obj , eListenerIndex )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ~isnumeric( eListenerIndex ) || eListenerIndex &lt; 0 || eListenerIndex &gt; obj.MaxListeners
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid index'</fo:inline> )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>

			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> obj.IsConnected == 0
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>

			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> eListenerIndex == 0
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> k = 1:obj.MaxListeners
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> isa( obj.Listener{ k ,  1} , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline> ) &amp;&amp; obj.Listener{ k ,  1}.Enabled == false
						obj.Listener{ k , 1  }.Enabled = true;
						obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'listener enabled in slot: '</fo:inline> , num2str( k ) ] )
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline>( isa( obj.Listener{ eListenerIndex , 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline> ) ) &amp;&amp; obj.Listener{ eListenerIndex , 1 }.Enabled == false
					obj.Listener{ eListenerIndex , 1 }.Enabled = true;
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'listener enabled in slot: '</fo:inline> , num2str( eListenerIndex ) ] )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% enable</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> disable( obj , dListenerIndex );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ~isnumeric( dListenerIndex ) || dListenerIndex &lt; 0 || dListenerIndex &gt; obj.MaxListeners
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid index'</fo:inline> );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>

			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> obj.IsConnected == 0;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>

			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> dListenerIndex == 0
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> k = 1:obj.MaxListeners
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> isa( obj.Listener{ k , 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline>  )&amp;&amp; obj.Listener{ k ,  1}.Enabled == true;
						obj.Listener{ k }.Enabled = false;
						obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'listener disabled in slot: '</fo:inline> , num2str( k ) ] )
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline>( isa( obj.Listener{ dListenerIndex , 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline> ) ) &amp;&amp; obj.Listener{ dListenerIndex , 1 }.Enabled == true;
					obj.Listener{ dListenerIndex , 1 }.Enabled = false;
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'listener disabled in slot: '</fo:inline> , num2str( dListenerIndex ) ] )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% disable</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> startRecord( obj )
			obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'StartRecording'</fo:inline> );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% startRecord</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> stopRecord( obj )
			obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'StopRecording'</fo:inline> );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% stopRecord</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> cycleRecord( obj , iterations , duration , delay )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( isnumeric( iterations ) &amp;&amp; isnumeric( duration ) &amp;&amp; isnumeric( delay ) );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = 1:iterations
					pause( delay );
					obj.startRecord;
					pause( duration );
					obj.stopRecord;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% cycleRecord</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> liveMode( obj )
			obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'LiveMode'</fo:inline> );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% liveMode</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> editMode( obj )
			obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'EditMode'</fo:inline> );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% editMode</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> startPlayback( obj )
			obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'TimelinePlay'</fo:inline> );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% startPlayback</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> stopPlayback( obj )
			obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'TimelineStop'</fo:inline> );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% stopPlayback</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setPlaybackStartFrame( obj , startFrame )
			obj.sendMessageAndWait( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetPlaybackStartFrame,'</fo:inline> , num2str( startFrame ) ] );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% setPlaybackStartFrame</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setPlaybackEndFrame( obj , endFrame )
			obj.sendMessageAndWait( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetPlaybackStopFrame,'</fo:inline> , num2str( endFrame ) ] );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% setPlaybackEndFrame</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setPlaybackLooping( obj , val )
			obj.sendMessageAndWait( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetPlaybackLooping,'</fo:inline> , num2str( val ) ] );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% stopPlaybackLooping</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setPlaybackCurrentFrame( obj , currentFrame )
			obj.sendMessageAndWait( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetPlaybackCurrentFrame,'</fo:inline> , num2str( currentFrame ) ] );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% stopPlaybackLooping</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setTakeName( obj , name )
			obj.sendMessageAndWait( strcat( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetRecordTakeName,'</fo:inline> , name ) );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% setTakeName</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setPlaybackTakeName( obj , name )
			obj.sendMessageAndWait( strcat( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetPlaybackTakeName,'</fo:inline> , name ) );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% setPlaybackTakeName</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setCurrentSession( obj , name )
            obj.sendMessageAndWait( strcat(<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'SetCurrentSession,'</fo:inline> , name) );
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% setCurrentSession</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> getMode( obj )
			[ bytearray , rc ] = obj.sendMessageAndWait( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'CurrentMode'</fo:inline> );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> rc == 0
				state = bytearray(1);
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( state == 0 )
					obj.Mode = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Live'</fo:inline>;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( state == 1 )
					obj.Mode = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Recording'</fo:inline>;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">elseif</fo:inline> ( state == 2 )
					obj.Mode = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Edit'</fo:inline>;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					obj.Mode = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">' '</fo:inline>;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'mode: '</fo:inline> , lower( obj.Mode ) ] )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.Mode = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">' '</fo:inline>;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getServerState</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> disconnect( obj )
			obj.disable( 0 );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> k = 1 : obj.MaxListeners
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> isa( obj.Listener{ k , 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'event.listener'</fo:inline> )
					delete( obj.Listener{ k , 1 } )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			obj.Listener{ obj.MaxListeners , 1 } = [  ];
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( isempty( obj.Client ) == 0 )
				obj.Client.Uninitialize;
				obj.Client = [  ];
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 )
					report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'disconnecting'</fo:inline> );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				obj.IsConnected = 0;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% disconnect</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> delete( obj )
			obj.disconnect
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% delete - destructor</fo:inline>
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% methods ( Access = public )</fo:inline>


	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">methods</fo:inline> ( Access = private )
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> getLastAssemblyPath( obj )
			pathtomfile = mfilename( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'fullpath'</fo:inline> );
			mfile = mfilename(  );
			mfilenamelength = length( mfile );
			foldertomfile = pathtomfile( 1 : end-mfilenamelength );
			obj.LastAssemblyPathFile = strcat( foldertomfile , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'assemblypath.txt'</fo:inline> );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( exist( obj.LastAssemblyPathFile , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'file'</fo:inline> ) == 2 )
				assemblypath = textread( obj.LastAssemblyPathFile , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'%s'</fo:inline> );
				assemblypath = strjoin( assemblypath );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline>( exist( assemblypath , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'file'</fo:inline> ) == 2)
					obj.AssemblyPath = assemblypath;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getLastAssemblyPath</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> getAssemblies( obj )
			obj.IsAssemblyLoaded = 0;
			obj.Assembly = [  ];
			obj.AssemblyVersion = [  ];
			domain = System.AppDomain.CurrentDomain;
			assemblies = domain.GetAssemblies;
			assembly{ assemblies.Length , 1 } = [  ];
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">for</fo:inline> i = 1:assemblies.Length
				assembly{ i } = assemblies.Get( i-1 );
				obj.Assembly{ i } = char( assembly{ i }.FullName );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( strncmp ( obj.Assembly{ i } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'NatNetML'</fo:inline> , 8 ) )
					aver = regexp( obj.Assembly{ i } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'\d+'</fo:inline> , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'match'</fo:inline> );
					obj.AssemblyVersion = strcat( aver{ 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'.'</fo:inline> , aver{ 2 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'.'</fo:inline> , aver{ 3 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'.'</fo:inline> , aver{ 4 } );
					obj.IsAssemblyLoaded = 1;
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% getAssemblies</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> addAssembly( obj )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( exist( obj.AssemblyPath , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'file'</fo:inline> ) == 2 )
				[ ~ ] = NET.addAssembly( obj.AssemblyPath );
				obj.IsAssemblyLoaded = 1;
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.IsAssemblyLoaded = 0;
				report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'failed to add NatNetML.dll assembly'</fo:inline> );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% addAssembly</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> setAssemblyPath( obj )
			[ name , path ] =	uigetfile( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'*.dll'</fo:inline> , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'Select the NatNetML.dll assembly - NatNetLib.dll is a dependency'</fo:inline> );
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( strcmpi( name , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'NatNetML.dll'</fo:inline>) == 1 )
				assemblyPath = strcat( path , name );
				textAssemblyPath = strrep( assemblyPath , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'\'</fo:inline> , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'\\'</fo:inline> );
				fileid = fopen( obj.LastAssemblyPathFile , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'wt'</fo:inline>);
				fprintf( fileid , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'%s'</fo:inline> , assemblyPath );
				fclose( fileid );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsAssemblyLoaded == 0 )
					obj.AssemblyPath = assemblyPath;
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'defined assembly path: '</fo:inline> , textAssemblyPath ] )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					obj.report( [ <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'redefined assembly path: '</fo:inline> , textAssemblyPath ] )
					obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'restart matlab to apply the changes'</fo:inline> )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid assembly path in function setAssemblyPath'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% setAssemlbyPath</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> report( obj , message )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsReporting == 1 )
				ctime = strsplit( num2str( clock ) );
				disp( sprintf ( [ ctime{ 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'/'</fo:inline> , ctime{ 2 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'/'</fo:inline> , ctime{ 3 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'  '</fo:inline> , ctime{ 4 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">':'</fo:inline> , ctime{ 5 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">':'</fo:inline> , ctime{ 6 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'  '</fo:inline> , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'natnet - '</fo:inline> , message ] ) )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% report</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> validIP = checkip( obj , value )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( ischar( value ) &amp;&amp; length( value ) &lt; 16 &amp;&amp; length( value ) &gt; 6 )
				val = strsplit( value , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'.'</fo:inline> );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( length( val ) == 4 )
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> all( isstrprop( val{ 1 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'digit'</fo:inline> ) ) &amp;&amp; all( isstrprop( val{ 2 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'digit'</fo:inline> ) )<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">...</fo:inline>
							&amp;&amp; all( isstrprop( val{ 3 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'digit'</fo:inline> ) ) &amp;&amp; all( isstrprop( val{ 4 } , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'digit'</fo:inline> ) )<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">...</fo:inline>
							&amp;&amp; length( val{ 1 } ) &lt; 4 &amp;&amp; length( val{ 2 } ) &lt; 4 &amp;&amp;  length( val{ 3 } ) &lt; 4 &amp;&amp; length( val{ 4 } ) &lt; 4 <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">...</fo:inline>
							&amp;&amp; ~isempty( val{ 1 } ) &amp;&amp; ~isempty( val{ 2 } ) &amp;&amp;  ~isempty( val{ 3 } ) &amp;&amp; ~isempty( val{ 4 } ) <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">...</fo:inline>
							&amp;&amp; str2double( val{ 1 } ) &lt; 256 &amp;&amp; str2double( val{ 2 } ) &lt; 256 &amp;&amp; str2double( val{ 3 } ) &lt; 256 &amp;&amp; str2double( val{ 4 } ) &lt; 256 <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">...</fo:inline>
							&amp;&amp; str2double( val{ 1 } ) &gt;= 0  &amp;&amp; str2double( val{ 2 } ) &gt;= 0 &amp;&amp; str2double( val{ 3 } ) &gt;= 0 &amp;&amp; str2double( val{ 4 } ) &gt;= 0
						validIP = value;
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
						report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid string for ip address (e.x. 127.0.0.1)'</fo:inline> )
						validIP = [  ];
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid string for ip address (e.x. 127.0.0.1)'</fo:inline> )
					validIP = [  ];
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				report( obj , <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'invalid string for ip address (e.x. 127.0.0.1)'</fo:inline> )
				validIP = [  ];
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% validIP</fo:inline>


		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">function</fo:inline> [ bytearray , rc ] = sendMessageAndWait( obj , cmd )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( obj.IsConnected == 1 );
				[ bytearray , rc ] = obj.Client.SendMessageAndWait( cmd );
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">if</fo:inline> ( rc == 0 )
					<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">return</fo:inline>
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
					obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'command failed due to an unknown error'</fo:inline> )
				<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">else</fo:inline>
				bytearray = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">''</fo:inline>;
				rc = <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">''</fo:inline>;
				obj.report( <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#aa04f9">'connection not established'</fo:inline> )
			<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline>
		<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% sendMessageAndWait</fo:inline>
	<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% methods ( Access = private )</fo:inline>
<fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#0e00ff">end</fo:inline> <fo:inline xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" color="#028009">% classdef natnet &lt; handle</fo:inline>
</fo:block><fo:block text-align="start" wrap-option="wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="monospace" id="idp1095186912"><fo:inline font-family="monospace"><fo:inline font-style="italic">
ans = 

  natnet with properties:

          ClientIP: '127.0.0.1'
    ConnectionType: 'Multicast'
            HostIP: '127.0.0.1'
       IsReporting: 0
       IsConnected: 0
              Mode: ' '
           Version: ' '
         FrameRate: 0

</fo:inline></fo:inline></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" id="idp1095180640"><fo:inline font-style="italic">
Published with MATLAB® R2023b</fo:inline></fo:block></fo:flow></fo:page-sequence></fo:root>